% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get.R
\name{get_network.bip}
\alias{get_network.bip}
\title{Extract networkDynamic.bip and network.bip Objects from Bipartite Network Simulations}
\usage{
get_network.bip(x, sim = 1, network = 1, collapse = FALSE, at)
}
\arguments{
\item{x}{An \code{EpiModel} object of class \code{\link{netsim.bip}} or
\code{\link{netdx.bip}}.}

\item{sim}{Simulation number of extracted network.}

\item{network}{Network number, for \code{netsim.bip} objects with multiple
overlapping networks (advanced use, and not applicable to \code{netdx.bip}
objects).}

\item{collapse}{If \code{TRUE}, collapse the \code{networkDynamic.bip} object to
a static \code{network.bip} object at a specified time step.}

\item{at}{If \code{collapse} is \code{TRUE}, the time step at which the
extracted network should be collapsed.}
}
\description{
Extracts the \code{networkDynamic.bip} object from a either a bipartite
             network epidemic model object generated with \code{netsim.bip} or a bipartite
             network diagnostic simulation generated with \code{netdx}, with the option to
             collapse the extracted \code{networkDynamic.bip} object down to a static
             \code{network.bip} object.
}
\details{
This function requires that the \code{networkDynamic.bip} object is saved during the
network simulation while running either \code{\link{netsim.bip}} or \code{\link{netdx.bip}}.
For the former, that is specified with the \code{save.network} parameter in
\code{\link{control.net.bip}}. For the latter, that is specified with the
\code{keep.tedgelist} parameter directly in \code{\link{netdx.bip}}.
}
\examples{
# Set up network and TERGM formiula
nw <- network.initialize.bip(n = 100, bipartite = 50, directed = FALSE)
formation <- ~edges
target.stats <- 50
coef.diss <- dissolution_coefs.bip(dissolution = ~offset(edges), duration = 20)

# Estimate the model
est <- netest.bip(nw, formation, target.stats, coef.diss)

# Run diagnostics, saving the networkDynamic objects
dx <- netdx.bip(est, nsteps = 10, nsims = 3, keep.tnetwork = TRUE, verbose = FALSE)

# Extract the network for simulation 2 from dx object
get_network.bip(dx, sim = 2)

# Extract and collapse the network from simulation 1 at time step 5
get_network.bip(dx, collapse = TRUE, at = 5)

# Parameterize the epidemic model, and simulate it
param <- param.net.bip(inf.prob = 0.3, inf.prob.m2 = 0.15)
init <- init.net.bip(i.num = 10, i.num.m2 = 10)
control <- control.net.bip(type = "SI", nsteps = 10, nsims = 3, verbose = FALSE)
mod <- netsim.bip(est, param, init, control)

# Extract the network for simulation 2 from mod object
get_network.bip(mod, sim = 2)

## Extract and collapse the network from simulation 1 at time step 5
get_network.bip(mod, collapse = TRUE, at = 5)

}
\keyword{extract}
